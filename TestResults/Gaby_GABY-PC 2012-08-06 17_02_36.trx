<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="237d41bf-f20f-40a6-ba4b-a30125943589" name="Gaby@GABY-PC 2012-08-06 17:02:36" runUser="Gaby-PC\Gaby" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="314ea883-3442-48a7-a1fa-f8f9c03203bb">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Gaby_GABY-PC 2012-08-06 17_02_36">
      <DeploymentItem filename="D:\GL\Scrum\ScrumBoard\Domain\bin\Debug\ScrumBoard.Domain.dll" />
      <DeploymentItem filename="D:\GL\Scrum\ScrumBoard\packages\SpecFlow.1.9.0\lib\net35\TechTalk.SpecFlow.dll" />
      <DeploymentItem filename="D:\GL\Scrum\ScrumBoard\packages\FluentAssertions.1.7.1.1\Lib\net40\FluentAssertions.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-08-06T17:02:36.1430000-03:00" queuing="2012-08-06T17:02:39.4450000-03:00" start="2012-08-06T17:02:39.6870000-03:00" finish="2012-08-06T17:02:57.7880000-03:00" />
  <ResultSummary outcome="Failed">
    <Counters total="7" executed="7" passed="6" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="IShouldBeHableToUniquelyIdentifyAUserStory" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="a85e59b0-fb9e-dbc6-5ccf-2d106774cd5a">
      <Description>I should be hable to uniquely identify a user story</Description>
      <Execution id="5c561414-e67b-4f16-b5a5-4f1a867f705c" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>UserStory</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.UserStoryFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="IShouldBeHableToUniquelyIdentifyAUserStory" />
    </UnitTest>
    <UnitTest name="AProjectShouldHaveABacklog" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="6ebe4eec-fbe9-caaf-0a7f-0a6912e407ef">
      <Description>A project should have a backlog</Description>
      <Execution id="d67c57e4-d482-40c8-995f-36df5d67f319" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Project</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.ProjectFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AProjectShouldHaveABacklog" />
    </UnitTest>
    <UnitTest name="AUserStoryShouldHaveAText" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="4b3eaaf6-8324-41ab-054e-38d11d06c9d8">
      <Description>A user story should have a text</Description>
      <Execution id="9a2342b8-e9a6-4bc5-a65d-bf525d9c6fea" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>UserStory</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.UserStoryFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AUserStoryShouldHaveAText" />
    </UnitTest>
    <UnitTest name="AProjectShouldHaveAName" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="9bcca343-b7e7-300b-ae17-436385c1fe2d">
      <Description>A project should have a name</Description>
      <Execution id="d046d98c-dd50-4be3-b9f1-4ae962d4fb5d" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Project</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.ProjectFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AProjectShouldHaveAName" />
    </UnitTest>
    <UnitTest name="ANewUserStoryShouldStartWithATemplate" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="f392da82-59ca-fea6-4780-6cc0fd467d1b">
      <Description>A new user story should start with a template</Description>
      <Execution id="790764d8-3fd1-4809-a1d8-5d86ecc73a1a" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>UserStory</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.UserStoryFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ANewUserStoryShouldStartWithATemplate" />
    </UnitTest>
    <UnitTest name="IShouldBeHableToUniquelyIdentifyAProject" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="263d0a80-81bd-30ec-e60b-4219a627a337">
      <Description>I should be hable to uniquely identify a project</Description>
      <Execution id="56df4a58-b871-47fd-83ec-b6bba7ee79bc" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Project</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.ProjectFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="IShouldBeHableToUniquelyIdentifyAProject" />
    </UnitTest>
    <UnitTest name="AddUserStory" storage="d:\gl\scrum\scrumboard\tests\specs\bin\debug\scrumboard.specs.dll" id="6dc10f22-9326-1114-4aac-09d13f12d7a3">
      <Description>Add User Story</Description>
      <Execution id="1fb1d211-d338-4456-b1ee-48620cbb9c7f" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Product Backlog</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="D:/GL/Scrum/ScrumBoard/Tests/Specs/bin/Debug/ScrumBoard.Specs.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="ScrumBoard.Specs.ProductBacklogFeature, ScrumBoard.Specs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddUserStory" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="263d0a80-81bd-30ec-e60b-4219a627a337" executionId="56df4a58-b871-47fd-83ec-b6bba7ee79bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4b3eaaf6-8324-41ab-054e-38d11d06c9d8" executionId="9a2342b8-e9a6-4bc5-a65d-bf525d9c6fea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6dc10f22-9326-1114-4aac-09d13f12d7a3" executionId="1fb1d211-d338-4456-b1ee-48620cbb9c7f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6ebe4eec-fbe9-caaf-0a7f-0a6912e407ef" executionId="d67c57e4-d482-40c8-995f-36df5d67f319" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bcca343-b7e7-300b-ae17-436385c1fe2d" executionId="d046d98c-dd50-4be3-b9f1-4ae962d4fb5d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a85e59b0-fb9e-dbc6-5ccf-2d106774cd5a" executionId="5c561414-e67b-4f16-b5a5-4f1a867f705c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f392da82-59ca-fea6-4780-6cc0fd467d1b" executionId="790764d8-3fd1-4809-a1d8-5d86ecc73a1a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="56df4a58-b871-47fd-83ec-b6bba7ee79bc" testId="263d0a80-81bd-30ec-e60b-4219a627a337" testName="IShouldBeHableToUniquelyIdentifyAProject" computerName="GABY-PC" duration="00:00:00.1540755" startTime="2012-08-06T17:02:39.8910000-03:00" endTime="2012-08-06T17:02:42.6970000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56df4a58-b871-47fd-83ec-b6bba7ee79bc">
      <Output>
        <StdOut>Given I have a project
-&gt; done: ProjectSteps.GivenIHaveAProject() (0.0s)
Then It should have a unique key
-&gt; done: GenericSteps.ThenIShouldBeHableToUniquelyIdentifyIt() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a2342b8-e9a6-4bc5-a65d-bf525d9c6fea" testId="4b3eaaf6-8324-41ab-054e-38d11d06c9d8" testName="AUserStoryShouldHaveAText" computerName="GABY-PC" duration="00:00:00.0071486" startTime="2012-08-06T17:02:42.7210000-03:00" endTime="2012-08-06T17:02:42.7470000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a2342b8-e9a6-4bc5-a65d-bf525d9c6fea">
      <Output>
        <StdOut>Given I have a story
-&gt; done: UserStorySteps.GivenIHaveAStory() (0.0s)
Then I should be hable to define its text
-&gt; done: UserStorySteps.ThenIShouldBeHableToDefineItsText() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1fb1d211-d338-4456-b1ee-48620cbb9c7f" testId="6dc10f22-9326-1114-4aac-09d13f12d7a3" testName="AddUserStory" computerName="GABY-PC" duration="00:00:00.0059825" startTime="2012-08-06T17:02:42.7590000-03:00" endTime="2012-08-06T17:02:42.7760000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fb1d211-d338-4456-b1ee-48620cbb9c7f">
      <Output>
        <StdOut>Given I have a Product Backlog
-&gt; done: ProductBacklogSteps.GivenIHaveAProductBacklog() (0.0s)
Then I should be able to add a User Story
-&gt; done: ProductBacklogSteps.ThenIShouldBeAbleToAddAUserStory() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d67c57e4-d482-40c8-995f-36df5d67f319" testId="6ebe4eec-fbe9-caaf-0a7f-0a6912e407ef" testName="AProjectShouldHaveABacklog" computerName="GABY-PC" duration="00:00:00.0020185" startTime="2012-08-06T17:02:42.7900000-03:00" endTime="2012-08-06T17:02:42.8030000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d67c57e4-d482-40c8-995f-36df5d67f319">
      <Output>
        <StdOut>Given I have a project
-&gt; done: ProjectSteps.GivenIHaveAProject() (0.0s)
Then It should have a backlog
-&gt; done: ProjectSteps.ThenItShouldHaveABacklog() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d046d98c-dd50-4be3-b9f1-4ae962d4fb5d" testId="9bcca343-b7e7-300b-ae17-436385c1fe2d" testName="AProjectShouldHaveAName" computerName="GABY-PC" duration="00:00:00.0019660" startTime="2012-08-06T17:02:42.8260000-03:00" endTime="2012-08-06T17:02:42.8370000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d046d98c-dd50-4be3-b9f1-4ae962d4fb5d">
      <Output>
        <StdOut>Given I have a project
-&gt; done: ProjectSteps.GivenIHaveAProject() (0.0s)
Then I should be hable to assign a name to it
-&gt; done: ProjectSteps.ThenIShouldBeHableToAssignANameToIt() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5c561414-e67b-4f16-b5a5-4f1a867f705c" testId="a85e59b0-fb9e-dbc6-5ccf-2d106774cd5a" testName="IShouldBeHableToUniquelyIdentifyAUserStory" computerName="GABY-PC" duration="00:00:00.0011959" startTime="2012-08-06T17:02:42.8490000-03:00" endTime="2012-08-06T17:02:42.8600000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5c561414-e67b-4f16-b5a5-4f1a867f705c">
      <Output>
        <StdOut>Given I have a story
-&gt; done: UserStorySteps.GivenIHaveAStory() (0.0s)
Then It should have a unique key
-&gt; done: GenericSteps.ThenIShouldBeHableToUniquelyIdentifyIt() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="790764d8-3fd1-4809-a1d8-5d86ecc73a1a" testId="f392da82-59ca-fea6-4780-6cc0fd467d1b" testName="ANewUserStoryShouldStartWithATemplate" computerName="GABY-PC" duration="00:00:14.6947360" startTime="2012-08-06T17:02:42.8730000-03:00" endTime="2012-08-06T17:02:57.5780000-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="790764d8-3fd1-4809-a1d8-5d86ecc73a1a">
      <Output>
        <StdOut>When I create a new story
-&gt; done: UserStorySteps.WhenICreateANewStory() (0.0s)
Then the story should follow this template 'As a &lt;role&gt;, I want &lt;goal/desire&gt; so that &lt;benefit&gt;'
-&gt; error: Expected string to be "As a &lt;role&gt;, I want &lt;goal/desire&gt; so that &lt;benefit&gt;", but found &lt;null&gt;.</StdOut>
        <ErrorInfo>
          <Message>Expected string to be "As a &lt;role&gt;, I want &lt;goal/desire&gt; so that &lt;benefit&gt;", but found &lt;null&gt;.</Message>
          <StackTrace>   at FluentAssertions.Frameworks.LateBoundTestFramework.Throw(String message) in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Frameworks\LateBoundTestFramework.cs:line 21
   at FluentAssertions.Frameworks.AssertionHelper.Throw(String message) in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Frameworks\AssertionHelper.cs:line 29
   at FluentAssertions.Verification.FailWith(String failureMessage, Object[] failureArgs) in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Verification.cs:line 158
   at FluentAssertions.Assertions.StringValidator.ValidateAgainstNulls() in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Assertions\StringValidator.cs:line 50
   at FluentAssertions.Assertions.StringValidator.Validate() in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Assertions\StringValidator.cs:line 31
   at FluentAssertions.Assertions.StringAssertions.Be(String expected, String reason, Object[] reasonArgs) in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Assertions\StringAssertions.cs:line 47
   at FluentAssertions.Assertions.StringAssertions.Be(String expected) in c:\Workspaces\FluentAssertions\Releases\1.7.0\FluentAssertions.Net35\Assertions\StringAssertions.cs:line 31
   at ScrumBoard.Specs.Steps.UserStorySteps.ThenTheStoryShouldFollowThisTemplate(String defaultValue) in D:\GL\Scrum\ScrumBoard\Tests\Specs\Steps\UserStorySteps.cs:line 38
   at lambda_method(Closure , IContextManager , String )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at ScrumBoard.Specs.UserStoryFeature.ScenarioCleanup() in D:\GL\Scrum\ScrumBoard\Tests\Specs\UserStory.feature.cs:line 0
   at ScrumBoard.Specs.UserStoryFeature.ANewUserStoryShouldStartWithATemplate() in d:\GL\Scrum\ScrumBoard\Tests\Specs\UserStory.feature:line 16
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>